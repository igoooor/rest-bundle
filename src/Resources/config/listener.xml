<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="ibrows_rest.listener.link_header.class">Ibrows\RestBundle\Listener\LinkHeaderListener</parameter>
        <parameter key="ibrows_rest.listener.view_debug.class">Ibrows\RestBundle\Listener\DebugResponseListener</parameter>
        <parameter key="ibrows_rest.listener.view.location.class">Ibrows\RestBundle\Listener\View\LocationResponseListener</parameter>
        <parameter key="ibrows_rest.listener.view.cache.class">Ibrows\RestBundle\Listener\View\CacheHeaderListener</parameter>
        <parameter key="ibrows_rest.listener.exclusion_policy.class">Ibrows\RestBundle\Listener\ExclusionPolicyResponseListener</parameter>
        <parameter key="ibrows_rest.listener.collection.class">Ibrows\RestBundle\Listener\CollectionDecorationListener</parameter>
        <parameter key="ibrows_rest.listener.etag.class">Ibrows\RestBundle\Listener\EtagResponseListener</parameter>
        <parameter key="ibrows_rest.listener.if_none_match.class">Ibrows\RestBundle\Listener\IfNonMatchResponseListener</parameter>
    </parameters>
    <services>
        <service id="ibrows_rest.listener.link_header" class="%ibrows_rest.listener.link_header.class%">
            <argument type="service" id="router" />
            <argument type="service" id="ibrows_rest.resource_transformer" />
            <tag name="kernel.event_listener" event="kernel.request" />
        </service>

        <service id="ibrows_rest.listener.view_debug" class="%ibrows_rest.listener.view_debug.class%">
            <argument>%ibrows_rest.config.listener.debug%</argument>
            <call method="setProfilerListener">
                <argument type="service" id="profiler_listener" on-invalid="ignore" />
            </call>
            <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="-99999" />
        </service>

        <service id="ibrows_rest.listener.etag" class="%ibrows_rest.listener.etag.class%">
            <argument>%ibrows_rest.config.listener.etag%</argument>
            <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="-500" />
        </service>

        <service id="ibrows_rest.listener.if_none_match" class="%ibrows_rest.listener.if_none_match.class%">
            <argument>%ibrows_rest.config.listener.if_none_match%</argument>
            <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="-501" />
        </service>

        <service id="ibrows_rest.listener.collection" class="%ibrows_rest.listener.collection.class%">
            <argument>%ibrows_rest.config.listener.collection_decorator%</argument>
            <argument type="service" id="ibrows_rest.resource_transformer" />
            <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="200" />
        </service>

        <!-- VIEW RESPONSE LISTENER -->
        <service id="ibrows_rest.listener.view.location" class="%ibrows_rest.listener.view.location.class%">
            <argument type="service" id="router"/>
            <argument type="service" id="ibrows_rest.utils.expression_evaluator"/>
            <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="199" />
        </service>

        <service id="ibrows_rest.listener.view.cache" class="%ibrows_rest.listener.view.cache.class%">
            <argument>%ibrows_rest.config.caches%</argument>
            <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="199" />
        </service>
        <!-- VIEW RESPONSE LISTENER END -->

        <service id="ibrows_rest.listener.view_exclusion_policy" class="%ibrows_rest.listener.exclusion_policy.class%">
            <argument>%ibrows_rest.config.listener.exclusion_policy%</argument>
            <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="200" />
        </service>
    </services>
</container>
